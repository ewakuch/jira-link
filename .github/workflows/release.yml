name: Release

on:
  push:
    tags:
      - 'v.*' # Trigger the workflow on tags matching v.*

jobs:
  release:
    name: Build and Create GitHub Release
    runs-on: ubuntu-latest
    permissions:
      contents: write # Grants permission to upload assets to the release

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Step 2: Set up the Java environment
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: zulu
          java-version: 17 # Use the appropriate Java version for your project

      # Step 3: Set up Gradle
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      # Step 4: Ensure Gradle Wrapper is executable
      - name: Set Gradlew Permissions
        run: chmod +x ./gradlew

      # Step 5: Build the Plugin
      - name: Build Plugin
        run: ./gradlew buildPlugin

      # Step 6: Prepare the Plugin Artifact
      - name: Prepare Plugin Artifact
        id: artifact
        shell: bash
        run: |
          cd ${{ github.workspace }}/build/distributions
          FILENAME=`ls *.zip`
          echo "filename=${FILENAME}" >> $GITHUB_ENV

      # Step 7: Create a GitHub release
      - name: Create GitHub Release
        id: release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }} # The tag that triggered the workflow
          release_name: Release ${{ github.ref_name }}
          body: |
            This release was automatically generated.
          draft: false
          prerelease: false

      # Step 8: Upload the artifact to the release
      - name: Upload Artifact to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: ./build/distributions/${{ env.filename }} # Use the prepared artifact path
          asset_name: ${{ env.filename }} # Use the prepared artifact name
          asset_content_type: application/zip